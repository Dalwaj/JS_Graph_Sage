/* graph_style.css */
body {
    /* display: flex;
    flex-direction: row; */
    font-family: Arial, serif;
    margin: 0;
}

.darkMode body {
    background-color: #18191A;
}

.lightMode body {
    background-color: white;
}

.lightMode text {
    fill: black;
}

.extent {
    fill: rgba(200, 200, 209, 0.3);
}

.PanelContent {
    display: none;
}

.scroll {
    width: 100%;
    height: 100%;
    -ms-overflow-style: none; /* Hide scrollbar for Chrome, Safari and Opera */
    color: yellow;
    font-size: 110%;
}

/* Hide scrollbar for IE and Edge */
.scroll::-webkit-scrollbar {
    display: none;
}

#graphFrame {
    display: inline-flex;
    /* height: 100%; */
    width: 100%;
}

/* #graphFrame > svg {
    overflow: scroll;
} */


#Overlay {
    width: 180px;
    /*position: absolute;
    top: 0px;
    left: 0px;*/
    height: 100%;
    /* overflow: auto; */
    background: none;
    margin: 0.5%;
    pointer-events: none;
    /* width: 300px; */

}

@media only screen and (min-width: 576px) {
    #Overlay {
        width: 300px;
    }
}

.Panel {
    position: relative;
    z-index: 1;
    height: fit-content;
    pointer-events: auto;
    color: white;
    background: rgba(184, 184, 184, 0.473);
    padding: 0.5%;
    margin-bottom: 2%;
    overflow: hidden;

}

#scrollPanel {
    display: none;
    height: 5%;
}

.PanelHeader {
    font-size: large;
    font-weight: bold;
    text-align: center;

}

.PanelContent th {
    padding: 3%;

}

.PanelContent th:nth-child(1) {
    text-align: left;
}

/* .PanelContent th:nth-child(2) {
    text-align: right;
} */

.PanelContent td:nth-child(2) {
    text-align: right;
}

#AlgorithmPanelContent {
    width: 100%;
}

#AlgorithmPanelContent button {
    width: 100%;
}

p {
    margin: 1%;
    width: max-content;
}

#groupList {
    text-align-last: right;
    direction: rtl;
}

.node {
    stroke: #fff;
    stroke-width: 1.5px;
    /* z-index: 100; */
}

text {
    fill: white;
}

.link {
    opacity: 0.6;
    fill: rgba(255, 255, 255, 0);
}

.loop {
    opacity: .6;
    fill: rgba(255, 255, 255, 0);
}


marker {
    fill: #bbb;
}

#redraw {
    width: 100%;
    background-color: lightblue;
    color: blue;
    height: 30px;
}

#redraw:hover {
    background-color: rgba(184, 184, 184, 0.473);
    color: white;
}

#vertexColoring button, #edgeColoring button {
    width: 20px;
    height: 20px;
}

#vertexColoring div, #edgeColoring div {
    margin: 5px 2px;
}

.hidingButton {
    height: fit-content;
    background: inherit;
}

.hidingButton:hover {
    scale: none;
    background: inherit;
}

/* 'x' button style, idea copied from https://impossiblue.github.io/log/141026/index.html : */
.x {
    position: relative;
    border: 2px solid #eef5df;
    background-color: #ff5248;
    border-radius: 50%;
    margin: 5px;
}

.x::before, .x::after {
    position: absolute;
    top: 7px;
    left: 3.1px;
    width: 10px;
    height: 2.5px;
    content: "";
    background-color: #eef5df;
    visibility: hidden;
}

.x::before {
    transform: rotate(-45deg);
}

.x::after {
    transform: rotate(45deg);
}

.x:hover {
    cursor: pointer;
    background-color: #ff5248;
}

.x:hover::before, .x:hover::after {
    visibility: visible;
}

#classes {
    line-height: 33px;
    vertical-align: top;
}

button {
    padding: 3px;
    color: whitesmoke;
    background-color: #3A3B3C;
    border: #3A3B3C;
    transition: scale 150ms;
}

button:hover {
    scale: 1.1;
    background-color: #2A2B2C;
}

.Panel > div:first-child {
    display: flex;
    flex-direction: row;
}

.lightMode {
    fill: white;

}

#g6 {
    color: black;
}

.lightMode rect.backgound {
    background-color: white;
}

.darkMode rect.backgound {
    fill: black;
}

.darkMode {
    background-color: black;
}

#isHamiltonian {
}

#PropertyPanelContent {
    display: block;

}
#PropertyPanelContent button{
    width: 100%;

}



textarea {
    resize: none;

}

#HouseButton{
    width: 100%;
}
table{
    width: 100%;
}
